
# services:
#   postgres:
#     image: postgres:16
#     container_name: cm-postgres
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: postgres
#     ports:
#       - "5433:5432"   # host:container
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
#       interval: 5s
#       timeout: 3s
#       retries: 20


services:
  postgres:
    image: postgres:16
    container_name: cm-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"   # host:container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    build:
      context: .              # you are in backend/course-management
      dockerfile: Dockerfile
    container_name: cm-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: postgres
      DATABASE_URL: jdbc:postgresql://postgres:5432/postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      # Optional CORS if you have a separate frontend:
      # APP_CORS_ALLOWED_ORIGINS: http://localhost:5173
    ports:
      - "8081:8080"           # host:container (use 8081 on host)

volumes:
  pg_data:
